apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "task1.fullname" . }}
  labels:
    {{- include "task1.labels" . | nindent 4 }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "task1.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print .Template.BasePath "/secret.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "task1.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command: {{ .Values.command | toYaml | nindent 10 }}
          {{- end }}
          args:
          {{- if or (eq .Values.application.profile "dev") (eq .Values.application.profile "prd") }}
            - --spring.profiles.active={{ .Values.application.profile }}
          {{- end }}
          {{- if .Values.lifecycle.enabled }}
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "wget http://localhost:8080/service/shutdown"]
          {{- end }}
          env:
            - name: MY_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "task1.fullname" . }}
                  key: mysecretkey
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - name: api
              containerPort: {{ .Values.service.api.port }}
              protocol: TCP
            - name: logs
              containerPort: {{ .Values.service.logs.port }}
              protocol: TCP
            - name: soap
              containerPort: {{ .Values.service.soap.port }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: 8080
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: 8080
          {{- end }}
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: config
              mountPath: /app
      volumes:
        - name: config
          configMap:
            name: {{ include "task1.fullname" . }}
            items:
            - key: config.json
              path: config.json
